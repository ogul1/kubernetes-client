#
# Copyright (C) 2015 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Only run once for latest commit per ref and cancel other (previous) runs.

name: Modified Build
env:
  MAVEN_ARGS: -B -C -V -ntp -Dhttp.keepAlive=false -e
permissions:
  contents: read
jobs:
  build:
    name: build (${{ matrix.java }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java:
        - 8
        - 11
        - 17
        - 21
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-build (${{ matrix.java }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/kubernetes-client/kubernetes-client', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - name: Checkout
      uses: actions/checkout@v4
    - run: touch optcd-3.txt
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: temurin
    - run: touch optcd-4.txt
    - name: Build Project
      run: ./mvnw ${MAVEN_ARGS} clean install
    - run: touch optcd-5.txt
    - name: Check java-generator CLI
      run: |-
        chmod a+x java-generator/cli/target/java-gen
        java-generator/cli/target/java-gen --source=java-generator/core/src/test/resources/crontab-crd.yml --target=./tmp
    - run: touch optcd-6.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-build (${{ matrix.java }})
        path: /home/runner/inotifywait-log-build (${{ matrix.java }}).csv
'on':
- push
- workflow_dispatch
